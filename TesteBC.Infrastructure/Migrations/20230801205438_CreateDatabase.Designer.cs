// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TesteBC.Infrastructure.Data.Context;

#nullable disable

namespace TesteBC.Infrastructure.Migrations
{
    [DbContext(typeof(TesteBCDBContext))]
    [Migration("20230801205438_CreateDatabase")]
    partial class CreateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TesteBC.Domain.Models.EntidadeModel", b =>
                {
                    b.Property<Guid>("idEntidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("varchar(14)");

                    b.Property<bool>("FlAtivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("FlPessoaFisica")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.HasKey("idEntidade");

                    b.ToTable("Entidades");
                });

            modelBuilder.Entity("TesteBC.Domain.Models.LancamentoModel", b =>
                {
                    b.Property<Guid>("idLancamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Agencia")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CodBarras")
                        .HasMaxLength(48)
                        .HasColumnType("varchar(48)");

                    b.Property<string>("ContaCorrente")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("DtPagamento")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DtVencimento")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("EntidadeId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("FlCredito")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("InstituicaoEmissora")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("VlDesconto")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("VlEncargos")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("VlJurosMora")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("VlLancamento")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("VlTotal")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("idLancamento");

                    b.HasIndex("EntidadeId");

                    b.ToTable("Lancamentos");
                });

            modelBuilder.Entity("TesteBC.Domain.Models.LancamentoModel", b =>
                {
                    b.HasOne("TesteBC.Domain.Models.EntidadeModel", "Entidade")
                        .WithMany("Lancamentos")
                        .HasForeignKey("EntidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entidade");
                });

            modelBuilder.Entity("TesteBC.Domain.Models.EntidadeModel", b =>
                {
                    b.Navigation("Lancamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
